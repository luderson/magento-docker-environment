# Deny files that only for internal use (work with ssh or ftp to download)
location ~ /\.(svn|git|hg|htpasswd|htaccess|bash|ssh|php_cs|config) { deny all; }
location ~ /.*\.(sh|pl|py|lua|inc|swp|phar|php_|phtml|log|ini|md|sql|conf|yml|zip|tar|.+gz)$ { deny all; }
#location ~ ^/([^/])+\.(txt|zip|tar|.+gz)$ { deny all; }

# Deny access per default .htaccess rules
location ~ ^/(errors/.*\.xml|media/(customer/|downloadable/|import/|theme_customization/.*\.xml)) { deny all; }
location ~* ^/(opt|media|static|\.well-known)/.*\.php$ { deny all; }
location ~ Gruntfile\.js { deny all; }

# Deny cron and favorite entry points for hackers and script kiddie
location ~* ^/(cron|phpminiadmin|pma|sqlyog|adminer.+)\.php { deny all; }
location ~* ^/(magento_version|php[mM]y[aA]dmin|pma) { deny all; }

# Deny auth and composer
location ~ (auth|package|composer)\.(json|lock)$ { deny all; }

# Limit requests and return "GONE 410" for search bots (if you need something more - use firewall/iptables)
location ~ ^/(fire|one.+)?checkout/  {
        limit_req zone=checkout burst=8;
        limit_req_status 429;
        if ($searchbot) { return 410; }
        try_files $uri $uri/ /index.php$is_args$args;
        }
        
location ~ ^/(wishlist|customer)/  {
        limit_req zone=customer burst=4;
        limit_req_status 429;
        if ($searchbot) { return 410; }
        try_files $uri $uri/ /index.php$is_args$args;
        }        
        
location ~ ^/((catalog)?search|catalog/product_compare|tag/product/list|sales/guest/view|newsletter|sendfriend|contact/index/post|review/product/post)/ {
        limit_req zone=catalog burst=4;
        limit_req_status 429;
        if ($searchbot) { return 410; }
        try_files $uri $uri/ /index.php$is_args$args;
        }
		
location ~ /V1/guest-carts/(?<cartId>.+)/payment-information {
        if ($cookie_form_key = "") { return 403; }
        limit_req zone=payment;
        limit_req_status 429;
        if ($searchbot) { return 410; }
        try_files $uri $uri/ /index.php$is_args$args;
    }
        
#location ~* (.*)/(soap|V1)/ {
#        limit_req zone=apiaccess;
#        limit_req_status 429;
#        if ($searchbot) { return 410; }
#        return 200 '! ---------- API disabled ---------- !'; add_header Content-Type text/plain; add_header X-API-Disabled "API Disabled";
#        try_files $uri $uri/ /index.php$is_args$args;
#}

location ~ ^/(index.php/)?admin.* {
        auth_basic $authentication;
        auth_basic_user_file /etc/nginx/.admin;
        try_files $uri $uri/ /index.php$is_args$args;
        
        ## disable backup from admin
        location ~ /backup/index {
            return 200 'Backup disabled';
            add_header Content-Type text/plain;  
        }
}

## Remove "index.php" in url
#if ($request_uri !~ "/(ADMIN_PLACEHOLDER|PMA_PLACEHOLDER)/") {set $no_index_php A; }
#if ($request_uri ~* "^(.*/)index\.php(/?)(.*)") { set $no_index_php "${no_index_php}B"; }
#if ($no_index_php = AB) { return 301 $1$3; }

## Dont let search bots to drill your website | exclude some args from indexing
if ($args ~ ^(brand|cat|color|dir|from|limit|price|type|mode|size|manufacturer|product_list_mode|product_list_order|product_list_dir)=.+) { set $filters A; }
if ($searchbot) { set $filters "${filters}B"; }
if ($filters = AB) { return 410; }

## Wordpress files and locations protection
location ~ /wp-config\.php { deny all; }
location ~ /wp-includes/(.*)\.php { deny all; }
location ~ /wp-admin/includes(.*)$ { deny all; }
location ~ /xmlrpc\.php { deny all; }
location ~ /wp-content/uploads/(.*)\.php(.?) { deny all; }